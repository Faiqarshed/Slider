plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()  // Ensure Maven Central is included
	maven { url 'https://jitpack.io' }
	maven { url 'https://dl.cloudsmith.io/public/graphql-java-kickstart/graphql-java-kickstart/maven/' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.security:spring-security-messaging'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
	implementation 'org.projectlombok:lombok:1.18.30'
	implementation 'io.jsonwebtoken:jjwt:0.12.6'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.squareup.retrofit2:retrofit:2.9.0'
	implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok:1.18.22'  // Or latest version
	annotationProcessor 'org.projectlombok:lombok:1.18.22' // Or latest version
	runtimeOnly 'com.mysql:mysql-connector-j'  // Keep only this MySQL connector
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
tasks.named('test') {
	useJUnitPlatform()
}
